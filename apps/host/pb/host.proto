syntax = "proto3";

package infraboard.cmdb.host;
option go_package="github.com/tqtcloud/cloud-manage/apps/host";

import "apps/resource/pb/resource.proto";
import "github.com/infraboard/mcube/pb/page/page.proto";
import "github.com/infraboard/mcube/pb/request/request.proto";

service Service {
    // 同步云商的主机资源
    rpc SyncHost(Host) returns(Host);
    // 查询本地同步后的主机资源列表
    rpc QueryHost(QueryHostRequest) returns(HostSet);
    // 查询主机详情信息
    rpc DescribeHost(DescribeHostRequest) returns(Host);
    // 更新主机信息, 同步更新云商资源信息
    rpc UpdateHost(UpdateHostRequest) returns(Host);
    // 释放主机, 按计划释放后, 信息会保留一段时间
    rpc ReleaseHost(ReleaseHostRequest) returns(Host);
}

message Host {
    // @gotags: json:"resource"
    resource.Resource resource = 1;
    // @gotags: json:"describe"
    Describe describe = 2;
}

message Describe {
    // GPU类型
    // @gotags: json:"gpu_spec"
    string gpu_spec = 1;
    // 操作系统类型，分为Windows和Linux
    // @gotags: json:"os_type"
    string os_type = 2;
    // 操作系统名称
    // @gotags: json:"os_name"
    string os_name = 3;
    // 镜像ID
    // @gotags: json:"image_id"
    string image_id = 4;
    // 公网出带宽最大值，单位为 Mbps
    // @gotags: json:"internet_max_bandwidth_out"
    int64 internet_max_bandwidth_out = 5;
    // 公网入带宽最大值，单位为 Mbps
    // @gotags: json:"internet_max_bandwidth_in"
    int64 internet_max_bandwidth_in = 6;
    // 秘钥对名称
    // @gotags: json:"key_pair_name"
    repeated string key_pair_name = 7;
    // 安全组  采用逗号分隔
    // @gotags: json:"security_groups"
    repeated string security_groups = 8;
    // 额外的无法通用的一些属性, 比如只有腾讯云独有的一些属性
    // @gotags: json:"extra"
    map<string, string> extra = 9;
}

message QueryHostRequest {
    // 分页参数
    // @gotags: json:"page"
    infraboard.mcube.page.PageRequest page = 1;
    // 关键字参数
    // @gotags: json:"keywords"
    string keywords = 2;
}

message HostSet {
    // @gotags: json:"total"
    int64 total = 1;
    // @gotags: json:"items"
    repeated Host items = 2;
}

message UpdateHostRequest {
    // @gotags: json:"id" validate:"required"
    string id = 1;
    // 更新模式
    // @gotags: json:"update_mode"
    infraboard.mcube.request.UpdateMode update_mode = 2;
    // @gotags: json:"data" validate:"required"
    UpdateHostData update_host_data = 3;
}

message UpdateHostData {
    // @gotags: json:"sepc"
    resource.Spec spec = 1;
    // @gotags: json:"describe"
    Describe describe = 2;
}

enum DescribeBy {
    HOST_ID = 0;
}

message DescribeHostRequest {
    // @gotags: json:"describe_by"
    DescribeBy describe_by = 1;
    // @gotags: json:"value" validate:"required"
    string value = 2;

}

message ReleaseHostRequest {
    // 主机Id
    // @gotags: json:"id" validate:"required"
    string id = 1;
}

enum STATUS {
    // 未知状态
    UNKNOW = 0;
    // 表示创建中
    PENDING = 5;
    // 表示创建失败
    CREATE_FAILED = 6;

    // 表示开机中
    STARTING = 10;
    // 表示运行中
    RUNNING = 11;

    // 表示关机中
    STOPPING = 20; 
    // 表示关机
    STOPPED = 21;

    // 表示重启中
    REBOOTING = 30;
    // 暂停中
    SUSPENDED = 40;

    // 状态异常
	ERROR  = 50;

    // 表示实例已经锁定
    LOCKED = 70;

    // 表示停止待销毁
    SHUTDOWN = 80;
    // 表示销毁中
    DELETING = 81;
    // 已销毁
    DESTROYED = 90;
}